# .github/workflows/update_mibgas_data.yml
name: Atualizar Dados MIBGAS Automaticamente

on:
  workflow_dispatch:
  schedule:
    - cron: '55 18 * * *'

permissions:
  contents: write

jobs:
  update-excel-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositÃ³rio
        uses: actions/checkout@v4

      - name: Configurar Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # NOVO: O seu script usa Selenium, que precisa de um navegador. Este passo instala o Chrome.
      - name: Instalar o navegador Chrome
        uses: browser-actions/setup-chrome@latest

      - name: Cache das dependÃªncias Python
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements_atualizacao_gas_MIBGAS.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Instalar dependÃªncias Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_atualizacao_gas_MIBGAS.txt
      
      - name: Executar script de atualizaÃ§Ã£o de dados com logging
        run: |
          mkdir -p logs
          start_time=$(date +%s)
          echo "=== ExecuÃ§Ã£o Python iniciada em $(date -d @$start_time '+%Y-%m-%d %H:%M:%S') ===" >> logs/update_mibgas_data.log
          
          python scripts/update_mibgas_data.py >> logs/update_mibgas_data.log 2>&1
          
          end_time=$(date +%s)
          echo "=== ExecuÃ§Ã£o terminada em $(date -d @$end_time '+%Y-%m-%d %H:%M:%S') ===" >> logs/update_mibgas_data.log
          runtime=$((end_time-start_time))
          echo "DuraÃ§Ã£o total: ${runtime} segundos." >> logs/update_mibgas_data.log
          echo "" >> logs/update_mibgas_data.log

      - name: Fazer upload do log como artefacto
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log_atualizacao_gas_MIBGAS
          path: logs/update_mibgas_data.log

      - name: Verificar se houve alteraÃ§Ãµes
        id: git-check
        run: |
          # Adicionar todas as alteraÃ§Ãµes (ficheiro Excel E ficheiro de log)
          git add -A
          if git diff --cached --quiet;
          then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit e push se houver alteraÃ§Ãµes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "ðŸ”¥ Dados MIBGAS atualizados automaticamente"
          git push
